/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AImportStatement extends PStatement
{
    private PImport _import_;

    public AImportStatement()
    {
    }

    public AImportStatement(
        PImport _import_)
    {
        setImport(_import_);

    }
    public Object clone()
    {
        return new AImportStatement(
            (PImport) cloneNode(_import_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAImportStatement(this);
    }

    public PImport getImport()
    {
        return _import_;
    }

    public void setImport(PImport node)
    {
        if(_import_ != null)
        {
            _import_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _import_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_import_);
    }

    void removeChild(Node child)
    {
        if(_import_ == child)
        {
            _import_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_import_ == oldChild)
        {
            setImport((PImport) newChild);
            return;
        }

    }
}
